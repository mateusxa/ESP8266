

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jul 26 21:16:57 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F628A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001F                     	;# 
    78  0081                     	;# 
    79  0085                     	;# 
    80  0086                     	;# 
    81  008C                     	;# 
    82  008E                     	;# 
    83  0092                     	;# 
    84  0098                     	;# 
    85  0099                     	;# 
    86  009A                     	;# 
    87  009B                     	;# 
    88  009C                     	;# 
    89  009D                     	;# 
    90  009F                     	;# 
    91  0000                     	;# 
    92  0001                     	;# 
    93  0002                     	;# 
    94  0003                     	;# 
    95  0004                     	;# 
    96  0005                     	;# 
    97  0006                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000E                     	;# 
   102  000E                     	;# 
   103  000F                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0015                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  008C                     	;# 
   119  008E                     	;# 
   120  0092                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009F                     	;# 
   128  000B                     _INTCONbits	set	11
   129  0019                     _TXREG	set	25
   130  0006                     _PORTB	set	6
   131  0005                     _PORTA	set	5
   132  0018                     _RCSTAbits	set	24
   133  000C                     _PIR1bits	set	12
   134  0086                     _TRISB	set	134
   135  0085                     _TRISA	set	133
   136  008C                     _PIE1bits	set	140
   137  0099                     _SPBRG	set	153
   138  0098                     _TXSTAbits	set	152
   139  0081                     _OPTION_REG	set	129
   140                           
   141                           	psect	strings
   142  0078                     __pstrings:
   143  0078                     stringtab:
   144  0078                     __stringtab:
   145  0078                     stringcode:	
   146                           ;	String table - string pointers are 1 byte each
   147                           
   148  0078                     stringdir:
   149  0078  3000               	movlw	high stringdir
   150  0079  008A               	movwf	10
   151  007A  0804               	movf	4,w
   152  007B  0A84               	incf	4,f
   153  007C  0782               	addwf	2,f
   154  007D                     __stringbase:
   155  007D  3400               	retlw	0
   156  007E                     __end_of__stringtab:
   157  007E                     STR_1:
   158  007E  3441               	retlw	65	;'A'
   159  007F  3442               	retlw	66	;'B'
   160  0080  3443               	retlw	67	;'C'
   161  0081  3444               	retlw	68	;'D'
   162  0082  3445               	retlw	69	;'E'
   163  0083  3446               	retlw	70	;'F'
   164  0084  3447               	retlw	71	;'G'
   165  0085  3400               	retlw	0
   166                           
   167                           	psect	cinit
   168  000B                     start_initialization:	
   169                           ; #config settings
   170                           
   171  000B                     __initialization:
   172  000B                     end_of_initialization:	
   173                           ;End of C runtime variable initialization code
   174                           
   175  000B                     __end_of__initialization:
   176  000B  0183               	clrf	3
   177  000C  28A2               	ljmp	_main	;jump to C main() function
   178                           
   179                           	psect	cstackCOMMON
   180  0070                     __pcstackCOMMON:
   181  0070                     ?_MCUconfig:
   182  0070                     ?_writeRS:	
   183                           ; 1 bytes @ 0x0
   184                           
   185  0070                     ?_GPIOconfig:	
   186                           ; 1 bytes @ 0x0
   187                           
   188  0070                     ?_USARTconfig:	
   189                           ; 1 bytes @ 0x0
   190                           
   191  0070                     ?_INTconfig:	
   192                           ; 1 bytes @ 0x0
   193                           
   194  0070                     ?_testBuffer:	
   195                           ; 1 bytes @ 0x0
   196                           
   197  0070                     ?_main:	
   198                           ; 1 bytes @ 0x0
   199                           
   200  0070                     ?_USART_interruption:	
   201                           ; 1 bytes @ 0x0
   202                           
   203  0070                     ??_USART_interruption:	
   204                           ; 1 bytes @ 0x0
   205                           
   206                           
   207                           ; 1 bytes @ 0x0
   208  0070                     	ds	2
   209  0072                     ??_MCUconfig:
   210  0072                     ??_GPIOconfig:	
   211                           ; 1 bytes @ 0x2
   212                           
   213  0072                     ??_USARTconfig:	
   214                           ; 1 bytes @ 0x2
   215                           
   216  0072                     ??_INTconfig:	
   217                           ; 1 bytes @ 0x2
   218                           
   219  0072                     ??_testBuffer:	
   220                           ; 1 bytes @ 0x2
   221                           
   222  0072                     ?_strlen:	
   223                           ; 1 bytes @ 0x2
   224                           
   225                           
   226                           ; 2 bytes @ 0x2
   227  0072                     	ds	2
   228  0074                     ??_strlen:
   229                           
   230                           ; 1 bytes @ 0x4
   231  0074                     	ds	1
   232  0075                     strlen@s:
   233                           
   234                           ; 1 bytes @ 0x5
   235  0075                     	ds	1
   236  0076                     strlen@cp:
   237                           
   238                           ; 1 bytes @ 0x6
   239  0076                     	ds	1
   240  0077                     ??_writeRS:
   241  0077                     writeRS@i:	
   242                           ; 1 bytes @ 0x7
   243                           
   244                           
   245                           ; 2 bytes @ 0x7
   246  0077                     	ds	2
   247  0079                     writeRS@value:
   248                           
   249                           ; 1 bytes @ 0x9
   250  0079                     	ds	1
   251  007A                     ??_main:
   252                           
   253                           	psect	maintext
   254  00A2                     __pmaintext:	
   255                           ; 1 bytes @ 0xA
   256 ;;
   257 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   258 ;;
   259 ;; *************** function _main *****************
   260 ;; Defined at:
   261 ;;		line 19 in file "main.c"
   262 ;; Parameters:    Size  Location     Type
   263 ;;		None
   264 ;; Auto vars:     Size  Location     Type
   265 ;;		None
   266 ;; Return value:  Size  Location     Type
   267 ;;                  1    wreg      void 
   268 ;; Registers used:
   269 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   270 ;; Tracked objects:
   271 ;;		On entry : B00/0
   272 ;;		On exit  : 0/0
   273 ;;		Unchanged: 0/0
   274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   275 ;;      Params:         0       0       0       0
   276 ;;      Locals:         0       0       0       0
   277 ;;      Temps:          0       0       0       0
   278 ;;      Totals:         0       0       0       0
   279 ;;Total ram usage:        0 bytes
   280 ;; Hardware stack levels required when called: 4
   281 ;; This function calls:
   282 ;;		_MCUconfig
   283 ;;		_writeRS
   284 ;; This function is called by:
   285 ;;		Startup code after reset
   286 ;; This function uses a non-reentrant model
   287 ;;
   288                           
   289                           
   290                           ;psect for function _main
   291  00A2                     _main:
   292  00A2                     l765:	
   293                           ;incstack = 0
   294                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   295                           
   296                           
   297                           ;main.c: 21:     MCUconfig();
   298  00A2  2093               	fcall	_MCUconfig
   299  00A3                     l767:
   300                           
   301                           ;main.c: 22:     writeRS("ABCDEFG");
   302  00A3  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   303  00A4  200D               	fcall	_writeRS
   304  00A5                     l43:	
   305                           ;main.c: 23:     while(1){
   306                           
   307  00A5                     l44:	
   308                           ;main.c: 25:     }
   309                           
   310  00A5  28A5               	goto	l43
   311  00A6  280A               	ljmp	start
   312  00A7                     __end_of_main:
   313                           
   314                           	psect	text1
   315  000D                     __ptext1:	
   316 ;; *************** function _writeRS *****************
   317 ;; Defined at:
   318 ;;		line 92 in file "main.c"
   319 ;; Parameters:    Size  Location     Type
   320 ;;  value           1    wreg     PTR unsigned char 
   321 ;;		 -> STR_1(8), 
   322 ;; Auto vars:     Size  Location     Type
   323 ;;  value           1    9[COMMON] PTR unsigned char 
   324 ;;		 -> STR_1(8), 
   325 ;;  i               2    7[COMMON] int 
   326 ;; Return value:  Size  Location     Type
   327 ;;                  1    wreg      void 
   328 ;; Registers used:
   329 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   330 ;; Tracked objects:
   331 ;;		On entry : 0/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   335 ;;      Params:         0       0       0       0
   336 ;;      Locals:         3       0       0       0
   337 ;;      Temps:          0       0       0       0
   338 ;;      Totals:         3       0       0       0
   339 ;;Total ram usage:        3 bytes
   340 ;; Hardware stack levels used: 1
   341 ;; Hardware stack levels required when called: 3
   342 ;; This function calls:
   343 ;;		_strlen
   344 ;;		_testBuffer
   345 ;; This function is called by:
   346 ;;		_main
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350                           
   351                           ;psect for function _writeRS
   352  000D                     _writeRS:
   353                           
   354                           ;incstack = 0
   355                           ; Regs used in _writeRS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   356                           ;writeRS@value stored from wreg
   357  000D  00F9               	movwf	writeRS@value
   358  000E                     l749:
   359                           
   360                           ;main.c: 94:     for(int i = 0; i <= strlen(value); i++){
   361  000E  01F7               	clrf	writeRS@i
   362  000F  01F8               	clrf	writeRS@i+1
   363  0010  281F               	goto	l757
   364  0011                     l751:
   365                           
   366                           ;main.c: 95:         TXREG = value[i];
   367  0011  0877               	movf	writeRS@i,w
   368  0012  0779               	addwf	writeRS@value,w
   369  0013  0084               	movwf	4
   370  0014  2078               	fcall	stringdir
   371  0015  1283               	bcf	3,5	;RP0=0, select bank0
   372  0016  1303               	bcf	3,6	;RP1=0, select bank0
   373  0017  0099               	movwf	25	;volatile
   374  0018                     l753:
   375                           
   376                           ;main.c: 96:         testBuffer();
   377  0018  209B               	fcall	_testBuffer
   378  0019                     l755:
   379                           
   380                           ;main.c: 97:     }
   381  0019  3001               	movlw	1
   382  001A  07F7               	addwf	writeRS@i,f
   383  001B  1803               	skipnc
   384  001C  0AF8               	incf	writeRS@i+1,f
   385  001D  3000               	movlw	0
   386  001E  07F8               	addwf	writeRS@i+1,f
   387  001F                     l757:
   388  001F  0879               	movf	writeRS@value,w
   389  0020  2036               	fcall	_strlen
   390  0021  0878               	movf	writeRS@i+1,w
   391  0022  0273               	subwf	?_strlen+1,w
   392  0023  1D03               	skipz
   393  0024  2827               	goto	u85
   394  0025  0877               	movf	writeRS@i,w
   395  0026  0272               	subwf	?_strlen,w
   396  0027                     u85:
   397  0027  1803               	skipnc
   398  0028  282A               	goto	u81
   399  0029  282B               	goto	u80
   400  002A                     u81:
   401  002A  2811               	goto	l751
   402  002B                     u80:
   403  002B                     l759:
   404                           
   405                           ;main.c: 98:     TXREG = 0x0A;
   406  002B  300A               	movlw	10
   407  002C  1283               	bcf	3,5	;RP0=0, select bank0
   408  002D  1303               	bcf	3,6	;RP1=0, select bank0
   409  002E  0099               	movwf	25	;volatile
   410  002F                     l761:
   411                           
   412                           ;main.c: 99:     testBuffer();
   413  002F  209B               	fcall	_testBuffer
   414  0030                     l763:
   415                           
   416                           ;main.c: 100:     TXREG = 0x0D;
   417  0030  300D               	movlw	13
   418  0031  1283               	bcf	3,5	;RP0=0, select bank0
   419  0032  1303               	bcf	3,6	;RP1=0, select bank0
   420  0033  0099               	movwf	25	;volatile
   421                           
   422                           ;main.c: 101:     testBuffer();
   423  0034  209B               	fcall	_testBuffer
   424  0035                     l70:
   425  0035  0008               	return
   426  0036                     __end_of_writeRS:
   427                           
   428                           	psect	text2
   429  009B                     __ptext2:	
   430 ;; *************** function _testBuffer *****************
   431 ;; Defined at:
   432 ;;		line 104 in file "main.c"
   433 ;; Parameters:    Size  Location     Type
   434 ;;		None
   435 ;; Auto vars:     Size  Location     Type
   436 ;;		None
   437 ;; Return value:  Size  Location     Type
   438 ;;                  1    wreg      void 
   439 ;; Registers used:
   440 ;;		None
   441 ;; Tracked objects:
   442 ;;		On entry : 0/0
   443 ;;		On exit  : 0/0
   444 ;;		Unchanged: 0/0
   445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   446 ;;      Params:         0       0       0       0
   447 ;;      Locals:         0       0       0       0
   448 ;;      Temps:          0       0       0       0
   449 ;;      Totals:         0       0       0       0
   450 ;;Total ram usage:        0 bytes
   451 ;; Hardware stack levels used: 1
   452 ;; Hardware stack levels required when called: 1
   453 ;; This function calls:
   454 ;;		Nothing
   455 ;; This function is called by:
   456 ;;		_writeRS
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460                           
   461                           ;psect for function _testBuffer
   462  009B                     _testBuffer:
   463  009B                     l693:	
   464                           ;incstack = 0
   465                           ; Regs used in _testBuffer: []
   466                           
   467  009B                     l73:	
   468                           ;main.c: 105:     while(!TXSTAbits.TRMT);
   469                           
   470  009B  1683               	bsf	3,5	;RP0=1, select bank1
   471  009C  1303               	bcf	3,6	;RP1=0, select bank1
   472  009D  1C98               	btfss	24,1	;volatile
   473  009E  28A0               	goto	u11
   474  009F  28A1               	goto	u10
   475  00A0                     u11:
   476  00A0  289B               	goto	l73
   477  00A1                     u10:
   478  00A1                     l76:
   479  00A1  0008               	return
   480  00A2                     __end_of_testBuffer:
   481                           
   482                           	psect	text3
   483  0036                     __ptext3:	
   484 ;; *************** function _strlen *****************
   485 ;; Defined at:
   486 ;;		line 4 in file "E:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;  s               1    wreg     PTR const unsigned char 
   489 ;;		 -> STR_1(8), 
   490 ;; Auto vars:     Size  Location     Type
   491 ;;  s               1    5[COMMON] PTR const unsigned char 
   492 ;;		 -> STR_1(8), 
   493 ;;  cp              1    6[COMMON] PTR const unsigned char 
   494 ;;		 -> STR_1(8), 
   495 ;; Return value:  Size  Location     Type
   496 ;;                  2    2[COMMON] unsigned int 
   497 ;; Registers used:
   498 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   499 ;; Tracked objects:
   500 ;;		On entry : 0/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   504 ;;      Params:         2       0       0       0
   505 ;;      Locals:         2       0       0       0
   506 ;;      Temps:          1       0       0       0
   507 ;;      Totals:         5       0       0       0
   508 ;;Total ram usage:        5 bytes
   509 ;; Hardware stack levels used: 2
   510 ;; Hardware stack levels required when called: 1
   511 ;; This function calls:
   512 ;;		Nothing
   513 ;; This function is called by:
   514 ;;		_writeRS
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518                           
   519                           ;psect for function _strlen
   520  0036                     _strlen:
   521                           
   522                           ;incstack = 0
   523                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+pclath]
   524                           ;strlen@s stored from wreg
   525  0036  00F5               	movwf	strlen@s
   526  0037                     l739:
   527  0037  0875               	movf	strlen@s,w
   528  0038  00F4               	movwf	??_strlen
   529  0039  0874               	movf	??_strlen,w
   530  003A  00F6               	movwf	strlen@cp
   531  003B  2840               	goto	l743
   532  003C                     l741:
   533  003C  3001               	movlw	1
   534  003D  00F4               	movwf	??_strlen
   535  003E  0874               	movf	??_strlen,w
   536  003F  07F6               	addwf	strlen@cp,f
   537  0040                     l743:
   538  0040  0876               	movf	strlen@cp,w
   539  0041  0084               	movwf	4
   540  0042  2078               	fcall	stringdir
   541  0043  3A00               	xorlw	0
   542  0044  1D03               	skipz
   543  0045  2847               	goto	u71
   544  0046  2848               	goto	u70
   545  0047                     u71:
   546  0047  283C               	goto	l741
   547  0048                     u70:
   548  0048                     l745:
   549  0048  0875               	movf	strlen@s,w
   550  0049  0276               	subwf	strlen@cp,w
   551  004A  00F2               	movwf	?_strlen
   552  004B  01F3               	clrf	?_strlen+1
   553  004C  1BF2               	btfsc	?_strlen,7
   554  004D  03F3               	decf	?_strlen+1,f
   555  004E                     l619:
   556  004E  0008               	return
   557  004F                     __end_of_strlen:
   558                           
   559                           	psect	text4
   560  0093                     __ptext4:	
   561 ;; *************** function _MCUconfig *****************
   562 ;; Defined at:
   563 ;;		line 48 in file "main.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;		None
   566 ;; Auto vars:     Size  Location     Type
   567 ;;		None
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      void 
   570 ;; Registers used:
   571 ;;		wreg, status,2, status,0, pclath, cstack
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   577 ;;      Params:         0       0       0       0
   578 ;;      Locals:         0       0       0       0
   579 ;;      Temps:          0       0       0       0
   580 ;;      Totals:         0       0       0       0
   581 ;;Total ram usage:        0 bytes
   582 ;; Hardware stack levels used: 1
   583 ;; Hardware stack levels required when called: 2
   584 ;; This function calls:
   585 ;;		_GPIOconfig
   586 ;;		_INTconfig
   587 ;;		_USARTconfig
   588 ;; This function is called by:
   589 ;;		_main
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           
   594                           ;psect for function _MCUconfig
   595  0093                     _MCUconfig:
   596  0093                     l705:	
   597                           ;incstack = 0
   598                           ; Regs used in _MCUconfig: [wreg+status,2+status,0+pclath+cstack]
   599                           
   600                           
   601                           ;main.c: 50:     OPTION_REG = 0x80;
   602  0093  3080               	movlw	128
   603  0094  1683               	bsf	3,5	;RP0=1, select bank1
   604  0095  1303               	bcf	3,6	;RP1=0, select bank1
   605  0096  0081               	movwf	1	;volatile
   606  0097                     l707:
   607                           
   608                           ;main.c: 51:     GPIOconfig();
   609  0097  2086               	fcall	_GPIOconfig
   610  0098                     l709:
   611                           
   612                           ;main.c: 52:     USARTconfig();
   613  0098  2068               	fcall	_USARTconfig
   614  0099                     l711:
   615                           
   616                           ;main.c: 53:     INTconfig();
   617  0099  20A7               	fcall	_INTconfig
   618  009A                     l58:
   619  009A  0008               	return
   620  009B                     __end_of_MCUconfig:
   621                           
   622                           	psect	text5
   623  0068                     __ptext5:	
   624 ;; *************** function _USARTconfig *****************
   625 ;; Defined at:
   626 ;;		line 57 in file "main.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;		None
   629 ;; Auto vars:     Size  Location     Type
   630 ;;		None
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   640 ;;      Params:         0       0       0       0
   641 ;;      Locals:         0       0       0       0
   642 ;;      Temps:          0       0       0       0
   643 ;;      Totals:         0       0       0       0
   644 ;;Total ram usage:        0 bytes
   645 ;; Hardware stack levels used: 1
   646 ;; Hardware stack levels required when called: 1
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		_MCUconfig
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           
   655                           ;psect for function _USARTconfig
   656  0068                     _USARTconfig:
   657  0068                     l679:	
   658                           ;incstack = 0
   659                           ; Regs used in _USARTconfig: [wreg]
   660                           
   661                           
   662                           ;main.c: 67:     TXSTAbits.TXEN = 1;
   663  0068  1683               	bsf	3,5	;RP0=1, select bank1
   664  0069  1303               	bcf	3,6	;RP1=0, select bank1
   665  006A  1698               	bsf	24,5	;volatile
   666                           
   667                           ;main.c: 68:     TXSTAbits.BRGH = 1;
   668  006B  1518               	bsf	24,2	;volatile
   669                           
   670                           ;main.c: 69:     TXSTAbits.SYNC = 0;
   671  006C  1218               	bcf	24,4	;volatile
   672  006D                     l681:
   673                           
   674                           ;main.c: 71:     SPBRG = 20 ;
   675  006D  3014               	movlw	20
   676  006E  0099               	movwf	25	;volatile
   677  006F                     l683:
   678                           
   679                           ;main.c: 74:     RCSTAbits.SPEN = 1;
   680  006F  1283               	bcf	3,5	;RP0=0, select bank0
   681  0070  1303               	bcf	3,6	;RP1=0, select bank0
   682  0071  1798               	bsf	24,7	;volatile
   683  0072                     l685:
   684                           
   685                           ;main.c: 75:     RCSTAbits.CREN = 1;
   686  0072  1618               	bsf	24,4	;volatile
   687  0073                     l687:
   688                           
   689                           ;main.c: 78:     PIR1bits.RCIF = 0;
   690  0073  128C               	bcf	12,5	;volatile
   691  0074                     l689:
   692                           
   693                           ;main.c: 79:     PIE1bits.RCIE = 1;
   694  0074  1683               	bsf	3,5	;RP0=1, select bank1
   695  0075  1303               	bcf	3,6	;RP1=0, select bank1
   696  0076  168C               	bsf	12,5	;volatile
   697  0077                     l61:
   698  0077  0008               	return
   699  0078                     __end_of_USARTconfig:
   700                           
   701                           	psect	text6
   702  00A7                     __ptext6:	
   703 ;; *************** function _INTconfig *****************
   704 ;; Defined at:
   705 ;;		line 108 in file "main.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;		None
   708 ;; Auto vars:     Size  Location     Type
   709 ;;		None
   710 ;; Return value:  Size  Location     Type
   711 ;;                  1    wreg      void 
   712 ;; Registers used:
   713 ;;		None
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   719 ;;      Params:         0       0       0       0
   720 ;;      Locals:         0       0       0       0
   721 ;;      Temps:          0       0       0       0
   722 ;;      Totals:         0       0       0       0
   723 ;;Total ram usage:        0 bytes
   724 ;; Hardware stack levels used: 1
   725 ;; Hardware stack levels required when called: 1
   726 ;; This function calls:
   727 ;;		Nothing
   728 ;; This function is called by:
   729 ;;		_MCUconfig
   730 ;; This function uses a non-reentrant model
   731 ;;
   732                           
   733                           
   734                           ;psect for function _INTconfig
   735  00A7                     _INTconfig:
   736  00A7                     l691:	
   737                           ;incstack = 0
   738                           ; Regs used in _INTconfig: []
   739                           
   740                           
   741                           ;main.c: 110:     INTCONbits.PEIE = 1;
   742  00A7  170B               	bsf	11,6	;volatile
   743                           
   744                           ;main.c: 111:     INTCONbits.GIE = 1;
   745  00A8  178B               	bsf	11,7	;volatile
   746  00A9                     l79:
   747  00A9  0008               	return
   748  00AA                     __end_of_INTconfig:
   749                           
   750                           	psect	text7
   751  0086                     __ptext7:	
   752 ;; *************** function _GPIOconfig *****************
   753 ;; Defined at:
   754 ;;		line 83 in file "main.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;		None
   757 ;; Auto vars:     Size  Location     Type
   758 ;;		None
   759 ;; Return value:  Size  Location     Type
   760 ;;                  1    wreg      void 
   761 ;; Registers used:
   762 ;;		wreg
   763 ;; Tracked objects:
   764 ;;		On entry : 0/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   768 ;;      Params:         0       0       0       0
   769 ;;      Locals:         0       0       0       0
   770 ;;      Temps:          0       0       0       0
   771 ;;      Totals:         0       0       0       0
   772 ;;Total ram usage:        0 bytes
   773 ;; Hardware stack levels used: 1
   774 ;; Hardware stack levels required when called: 1
   775 ;; This function calls:
   776 ;;		Nothing
   777 ;; This function is called by:
   778 ;;		_MCUconfig
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           
   783                           ;psect for function _GPIOconfig
   784  0086                     _GPIOconfig:
   785  0086                     l677:	
   786                           ;incstack = 0
   787                           ; Regs used in _GPIOconfig: [wreg]
   788                           
   789                           
   790                           ;main.c: 84:     TRISA = 0xF3;
   791  0086  30F3               	movlw	243
   792  0087  1683               	bsf	3,5	;RP0=1, select bank1
   793  0088  1303               	bcf	3,6	;RP1=0, select bank1
   794  0089  0085               	movwf	5	;volatile
   795                           
   796                           ;main.c: 85:     TRISB = 0xFB;
   797  008A  30FB               	movlw	251
   798  008B  0086               	movwf	6	;volatile
   799                           
   800                           ;main.c: 88:     PORTA = 0xF7;
   801  008C  30F7               	movlw	247
   802  008D  1283               	bcf	3,5	;RP0=0, select bank0
   803  008E  1303               	bcf	3,6	;RP1=0, select bank0
   804  008F  0085               	movwf	5	;volatile
   805                           
   806                           ;main.c: 89:     PORTB = 0xFB;
   807  0090  30FB               	movlw	251
   808  0091  0086               	movwf	6	;volatile
   809  0092                     l64:
   810  0092  0008               	return
   811  0093                     __end_of_GPIOconfig:
   812                           
   813                           	psect	text8
   814  004F                     __ptext8:	
   815 ;; *************** function _USART_interruption *****************
   816 ;; Defined at:
   817 ;;		line 30 in file "main.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;		None
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		None
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   831 ;;      Params:         0       0       0       0
   832 ;;      Locals:         0       0       0       0
   833 ;;      Temps:          2       0       0       0
   834 ;;      Totals:         2       0       0       0
   835 ;;Total ram usage:        2 bytes
   836 ;; Hardware stack levels used: 1
   837 ;; This function calls:
   838 ;;		Nothing
   839 ;; This function is called by:
   840 ;;		Interrupt level 1
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           
   845                           ;psect for function _USART_interruption
   846  004F                     _USART_interruption:
   847  004F                     i1l733:
   848                           
   849                           ;main.c: 31:     if(PIR1bits.RCIF){
   850  004F  1283               	bcf	3,5	;RP0=0, select bank0
   851  0050  1303               	bcf	3,6	;RP1=0, select bank0
   852  0051  1E8C               	btfss	12,5	;volatile
   853  0052  2854               	goto	u4_21
   854  0053  2855               	goto	u4_20
   855  0054                     u4_21:
   856  0054  2861               	goto	i1l55
   857  0055                     u4_20:
   858  0055                     i1l735:
   859                           
   860                           ;main.c: 33:         PIR1bits.RCIF = 0;
   861  0055  128C               	bcf	12,5	;volatile
   862                           
   863                           ;main.c: 35:         if(RCSTAbits.FERR || RCSTAbits.OERR){
   864  0056  1918               	btfsc	24,2	;volatile
   865  0057  2859               	goto	u5_21
   866  0058  285A               	goto	u5_20
   867  0059                     u5_21:
   868  0059  285E               	goto	i1l54
   869  005A                     u5_20:
   870  005A                     i1l737:
   871  005A  1C98               	btfss	24,1	;volatile
   872  005B  285D               	goto	u6_21
   873  005C  285E               	goto	u6_20
   874  005D                     u6_21:
   875  005D  2861               	goto	i1l55
   876  005E                     u6_20:
   877  005E                     i1l54:
   878                           
   879                           ;main.c: 37:             RCSTAbits.CREN = 0;
   880  005E  1218               	bcf	24,4	;volatile
   881                           
   882                           ;main.c: 38:             RCSTAbits.CREN = 1;
   883  005F  1618               	bsf	24,4	;volatile
   884  0060  0009               	retfie	;# 
   885  0061                     i1l55:
   886  0061  0871               	movf	??_USART_interruption+1,w
   887  0062  008A               	movwf	10
   888  0063  0E70               	swapf	??_USART_interruption,w
   889  0064  0083               	movwf	3
   890  0065  0EFE               	swapf	btemp,f
   891  0066  0E7E               	swapf	btemp,w
   892  0067  0009               	retfie
   893  0068                     __end_of_USART_interruption:
   894  007E                     btemp	set	126	;btemp
   895  007E                     wtemp0	set	126
   896                           
   897                           	psect	intentry
   898  0004                     __pintentry:	
   899                           ;incstack = 0
   900                           ; Regs used in _USART_interruption: []
   901                           
   902  0004                     interrupt_function:
   903  007E                     saved_w	set	btemp
   904  0004  00FE               	movwf	btemp
   905  0005  0E03               	swapf	3,w
   906  0006  00F0               	movwf	??_USART_interruption
   907  0007  080A               	movf	10,w
   908  0008  00F1               	movwf	??_USART_interruption+1
   909  0009  284F               	ljmp	_USART_interruption
   910                           
   911                           	psect	config
   912                           
   913                           ;Config register CONFIG @ 0x2007
   914                           ;	Oscillator Selection bits
   915                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
   916                           ;	Watchdog Timer Enable bit
   917                           ;	WDTE = OFF, WDT disabled
   918                           ;	Power-up Timer Enable bit
   919                           ;	PWRTE = OFF, PWRT disabled
   920                           ;	RA5/MCLR/VPP Pin Function Select bit
   921                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital input, MCLR internally tied to VDD
   922                           ;	Brown-out Detect Enable bit
   923                           ;	BOREN = OFF, BOD disabled
   924                           ;	Low-Voltage Programming Enable bit
   925                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
   926                           ;	Data EE Memory Code Protection bit
   927                           ;	CPD = OFF, Data memory code protection off
   928                           ;	Flash Program Memory Code Protection bit
   929                           ;	CP = OFF, Code protection off
   930  2007                     	org	8199
   931  2007  3F18               	dw	16152

Data Sizes:
    Strings     8
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 

    writeRS@value	PTR unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _main->_writeRS
    _writeRS->_strlen

Critical Paths under _USART_interruption in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _USART_interruption in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _USART_interruption in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _USART_interruption in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     246
                          _MCUconfig
                            _writeRS
 ---------------------------------------------------------------------------------
 (1) _writeRS                                              3     3      0     246
                                              7 COMMON     3     3      0
                             _strlen
                         _testBuffer
 ---------------------------------------------------------------------------------
 (2) _testBuffer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _strlen                                               5     3      2     123
                                              2 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _MCUconfig                                            0     0      0       0
                         _GPIOconfig
                          _INTconfig
                        _USARTconfig
 ---------------------------------------------------------------------------------
 (2) _USARTconfig                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTconfig                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GPIOconfig                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _USART_interruption                                   2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MCUconfig
     _GPIOconfig
     _INTconfig
     _USARTconfig
   _writeRS
     _strlen
     _testBuffer

 _USART_interruption (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jul 26 21:16:57 2021

                _USARTconfig 0068                            pc 0002                           l43 00A5  
                         l44 00A5                           l61 0077                           l70 0035  
                         l64 0092                           l73 009B                           l58 009A  
                         l76 00A1                           l79 00A9                           u10 00A1  
                         u11 00A0                           u70 0048                           u71 0047  
                         u80 002B                           u81 002A                           u85 0027  
 __end_of_USART_interruption 0068                           fsr 0004                          l711 0099  
                        l705 0093                          l707 0097                          l619 004E  
                        l709 0098                          l741 003C                          l743 0040  
                        l751 0011                          l681 006D                          l745 0048  
                        l761 002F                          l753 0018                          l691 00A7  
                        l683 006F                          l739 0037                          l763 0030  
                        l755 0019                          l677 0086                          l685 0072  
                        l693 009B                          l757 001F                          l749 000E  
                        l765 00A2                          l687 0073                          l679 0068  
                        l759 002B                          l767 00A3                          l689 0074  
                        fsr0 0004                  ?_GPIOconfig 0070                         STR_1 007E  
                       i1l54 005E                         i1l55 0061                         u4_20 0055  
                       u4_21 0054                         u5_20 005A                         u5_21 0059  
                       u6_20 005E                         u6_21 005D                         _main 00A2  
                       btemp 007E                         start 000A                        ?_main 0070  
         __size_of_MCUconfig 0008                        i1l733 004F                        i1l735 0055  
                      i1l737 005A                        _SPBRG 0099                        _PORTA 0005  
                      _PORTB 0006                        _TRISA 0085                        _TRISB 0086  
                      _TXREG 0019           __size_of_INTconfig 0003                        pclath 000A  
                      status 0003                        wtemp0 007E              __end_of_writeRS 0036  
        __size_of_GPIOconfig 000D              __initialization 000B                 __end_of_main 00A7  
                     ??_main 007A            __end_of_MCUconfig 009B            __end_of_INTconfig 00AA  
                     _strlen 0036                       saved_w 007E                    ??_writeRS 0077  
    __end_of__initialization 000B               __pcstackCOMMON 0070                 ?_USARTconfig 0070  
               ??_GPIOconfig 0072           _USART_interruption 004F          ?_USART_interruption 0070  
                 __pmaintext 00A2           __end_of_GPIOconfig 0093                   __pintentry 0004  
       ??_USART_interruption 0070                      ?_strlen 0072                   __stringtab 0078  
                    __ptext1 000D                      __ptext2 009B                      __ptext3 0036  
                    __ptext4 0093                      __ptext5 0068                      __ptext6 00A7  
                    __ptext7 0086                      __ptext8 004F              __size_of_strlen 0019  
                    _writeRS 000D         end_of_initialization 000B                 writeRS@value 0079  
                  _RCSTAbits 0018                    _MCUconfig 0093                   _testBuffer 009B  
                  _INTconfig 00A7         __size_of_USARTconfig 0010                      strlen@s 0075  
                  _TXSTAbits 0098                   ?_MCUconfig 0070                   ?_INTconfig 0070  
             __end_of_strlen 004F          start_initialization 000B                  ?_testBuffer 0070  
                   ??_strlen 0074                    ___latbits 0000                  ??_MCUconfig 0072  
                ??_INTconfig 0072                    __pstrings 0078  __size_of_USART_interruption 0019  
                   ?_writeRS 0070          __size_of_testBuffer 0007            interrupt_function 0004  
                   _PIE1bits 008C                     _PIR1bits 000C                  __stringbase 007D  
              ??_USARTconfig 0072           __end_of__stringtab 007E             __size_of_writeRS 0029  
              __size_of_main 0005                 ??_testBuffer 0072          __end_of_USARTconfig 0078  
                 _INTCONbits 000B                   _GPIOconfig 0086                     intlevel1 0000  
         __end_of_testBuffer 00A2                    stringcode 0078                   _OPTION_REG 0081  
                   strlen@cp 0076                     stringdir 0078                     stringtab 0078  
                   writeRS@i 0077  
